CREATE DATABASE MiBancaEnLineaDB
GO
USE [MiBancaEnLineaDB]
GO
/****** Object:  Table [dbo].[TBL_CLIENTE]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_CLIENTE](
	[PK_TBL_CLIENTE] [int] IDENTITY(1,1) NOT NULL,
	[NOMBRE] [nvarchar](50) NOT NULL,
	[APELLIDO] [nvarchar](50) NOT NULL,
	[EMAIL] [nvarchar](100) NOT NULL,
 CONSTRAINT [PK_TBL_CLIENTE] PRIMARY KEY CLUSTERED 
(
	[PK_TBL_CLIENTE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_CUENTA_BANCARIA]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_CUENTA_BANCARIA](
	[PK_TBL_CUENTA_BANCARIA] [int] IDENTITY(1,1) NOT NULL,
	[FK_PK_TBL_CLIENTE] [int] NOT NULL,
	[SALDO] [decimal](18, 2) NOT NULL,
 CONSTRAINT [PK_TBL_CUENTA_BANCARIA] PRIMARY KEY CLUSTERED 
(
	[PK_TBL_CUENTA_BANCARIA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_HISTORICO_SALDOS]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_HISTORICO_SALDOS](
	[PK_TBL_HISTORICO_SALDOS] [int] IDENTITY(1,1) NOT NULL,
	[FECHA] [datetime] NOT NULL,
	[FK_PK_TBL_CUENTA_BANCARIA] [int] NOT NULL,
	[TASA_INTERES_DIARIO] [decimal](18, 5) NULL,
	[MONTO] [decimal](18, 5) NULL,
	[INTERES_GANADO] [decimal](18, 5) NULL,
 CONSTRAINT [PK_TBL_HISTORICO_SALDOS] PRIMARY KEY CLUSTERED 
(
	[PK_TBL_HISTORICO_SALDOS] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_TASA]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_TASA](
	[PK_TBL_TASA] [int] IDENTITY(1,1) NOT NULL,
	[MONTO_DESDE] [decimal](18, 2) NOT NULL,
	[MONTO_HASTA] [decimal](18, 2) NULL,
	[TASA] [decimal](18, 2) NOT NULL,
	[TASA_DIARIA] [decimal](18, 5) NULL,
 CONSTRAINT [PK_TBL_TASA] PRIMARY KEY CLUSTERED 
(
	[PK_TBL_TASA] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_TIPO_TRANSACCION]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_TIPO_TRANSACCION](
	[PK_TBL_TIPO_TRANSACCION] [int] IDENTITY(1,1) NOT NULL,
	[CODIGO_TIPO_TRANSACCION] [nvarchar](5) NOT NULL,
	[DESCRIPCION] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_TBL_TIPO_TRANSACCION] PRIMARY KEY CLUSTERED 
(
	[PK_TBL_TIPO_TRANSACCION] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TBL_TRANSACCION]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TBL_TRANSACCION](
	[PK_TBL_TRANSACCION] [int] IDENTITY(1,1) NOT NULL,
	[FK_PK_TBL_CUENTA_BANCARIA] [int] NOT NULL,
	[FK_PK_TBL_CUENTA_BANCARIA_DESTINO] [int] NULL,
	[FK_PK_TBL_TIPO_TRANSACCION] [int] NOT NULL,
	[MONTO] [decimal](18, 2) NOT NULL,
	[FECHA] [datetime] NOT NULL,
 CONSTRAINT [PK_TBL_TRANSACCION] PRIMARY KEY CLUSTERED 
(
	[PK_TBL_TRANSACCION] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[TBL_CLIENTE] ON 
GO
INSERT [dbo].[TBL_CLIENTE] ([PK_TBL_CLIENTE], [NOMBRE], [APELLIDO], [EMAIL]) VALUES (1, N'ESTEBAN', N'NAVARRO', N'NAVARRO.ESTN@GMAIL.COM')
GO
INSERT [dbo].[TBL_CLIENTE] ([PK_TBL_CLIENTE], [NOMBRE], [APELLIDO], [EMAIL]) VALUES (2, N'CARLOS', N'MARTINEZ', N'CMARTINEZ@GMAIL.COM')
GO
INSERT [dbo].[TBL_CLIENTE] ([PK_TBL_CLIENTE], [NOMBRE], [APELLIDO], [EMAIL]) VALUES (3, N'ROGER', N'GONZALEZ', N'RGONZALEZ@GMAIL.COM')
GO
INSERT [dbo].[TBL_CLIENTE] ([PK_TBL_CLIENTE], [NOMBRE], [APELLIDO], [EMAIL]) VALUES (4, N'JOSSELINE', N'GONZALEZ', N'JGONZALEZ@GMAIL.COM')
GO
SET IDENTITY_INSERT [dbo].[TBL_CLIENTE] OFF
GO
SET IDENTITY_INSERT [dbo].[TBL_CUENTA_BANCARIA] ON 
GO
INSERT [dbo].[TBL_CUENTA_BANCARIA] ([PK_TBL_CUENTA_BANCARIA], [FK_PK_TBL_CLIENTE], [SALDO]) VALUES (1, 1, CAST(10000.00 AS Decimal(18, 2)))
GO
INSERT [dbo].[TBL_CUENTA_BANCARIA] ([PK_TBL_CUENTA_BANCARIA], [FK_PK_TBL_CLIENTE], [SALDO]) VALUES (2, 2, CAST(20000.00 AS Decimal(18, 2)))
GO
INSERT [dbo].[TBL_CUENTA_BANCARIA] ([PK_TBL_CUENTA_BANCARIA], [FK_PK_TBL_CLIENTE], [SALDO]) VALUES (3, 3, CAST(30000.00 AS Decimal(18, 2)))
GO
INSERT [dbo].[TBL_CUENTA_BANCARIA] ([PK_TBL_CUENTA_BANCARIA], [FK_PK_TBL_CLIENTE], [SALDO]) VALUES (4, 4, CAST(40000.00 AS Decimal(18, 2)))
GO
SET IDENTITY_INSERT [dbo].[TBL_CUENTA_BANCARIA] OFF
GO
SET IDENTITY_INSERT [dbo].[TBL_TASA] ON 
GO
INSERT [dbo].[TBL_TASA] ([PK_TBL_TASA], [MONTO_DESDE], [MONTO_HASTA], [TASA], [TASA_DIARIA]) VALUES (1, CAST(5001.00 AS Decimal(18, 2)), CAST(100000.99 AS Decimal(18, 2)), CAST(0.30 AS Decimal(18, 2)), CAST(0.01000 AS Decimal(18, 5)))
GO
INSERT [dbo].[TBL_TASA] ([PK_TBL_TASA], [MONTO_DESDE], [MONTO_HASTA], [TASA], [TASA_DIARIA]) VALUES (2, CAST(100001.00 AS Decimal(18, 2)), CAST(500000.99 AS Decimal(18, 2)), CAST(0.50 AS Decimal(18, 2)), CAST(0.01667 AS Decimal(18, 5)))
GO
INSERT [dbo].[TBL_TASA] ([PK_TBL_TASA], [MONTO_DESDE], [MONTO_HASTA], [TASA], [TASA_DIARIA]) VALUES (3, CAST(500001.00 AS Decimal(18, 2)), CAST(1000000.99 AS Decimal(18, 2)), CAST(1.25 AS Decimal(18, 2)), CAST(0.04167 AS Decimal(18, 5)))
GO
INSERT [dbo].[TBL_TASA] ([PK_TBL_TASA], [MONTO_DESDE], [MONTO_HASTA], [TASA], [TASA_DIARIA]) VALUES (4, CAST(1000001.00 AS Decimal(18, 2)), NULL, CAST(1.50 AS Decimal(18, 2)), CAST(0.05000 AS Decimal(18, 5)))
GO
SET IDENTITY_INSERT [dbo].[TBL_TASA] OFF
GO
SET IDENTITY_INSERT [dbo].[TBL_TIPO_TRANSACCION] ON 
GO
INSERT [dbo].[TBL_TIPO_TRANSACCION] ([PK_TBL_TIPO_TRANSACCION], [CODIGO_TIPO_TRANSACCION], [DESCRIPCION]) VALUES (1, N'001', N'DEPOSITO')
GO
INSERT [dbo].[TBL_TIPO_TRANSACCION] ([PK_TBL_TIPO_TRANSACCION], [CODIGO_TIPO_TRANSACCION], [DESCRIPCION]) VALUES (2, N'002', N'RETIRO')
GO
INSERT [dbo].[TBL_TIPO_TRANSACCION] ([PK_TBL_TIPO_TRANSACCION], [CODIGO_TIPO_TRANSACCION], [DESCRIPCION]) VALUES (3, N'003', N'TRASPASO')
GO
SET IDENTITY_INSERT [dbo].[TBL_TIPO_TRANSACCION] OFF
GO
ALTER TABLE [dbo].[TBL_CUENTA_BANCARIA]  WITH CHECK ADD  CONSTRAINT [FK_PK_TBL_CLIENTE] FOREIGN KEY([FK_PK_TBL_CLIENTE])
REFERENCES [dbo].[TBL_CLIENTE] ([PK_TBL_CLIENTE])
GO
ALTER TABLE [dbo].[TBL_CUENTA_BANCARIA] CHECK CONSTRAINT [FK_PK_TBL_CLIENTE]
GO
ALTER TABLE [dbo].[TBL_HISTORICO_SALDOS]  WITH CHECK ADD  CONSTRAINT [FK_TBL_CUENTA_BANCARIA_TBL_HISTORICO_SALDOS] FOREIGN KEY([FK_PK_TBL_CUENTA_BANCARIA])
REFERENCES [dbo].[TBL_CUENTA_BANCARIA] ([PK_TBL_CUENTA_BANCARIA])
GO
ALTER TABLE [dbo].[TBL_HISTORICO_SALDOS] CHECK CONSTRAINT [FK_TBL_CUENTA_BANCARIA_TBL_HISTORICO_SALDOS]
GO
ALTER TABLE [dbo].[TBL_TRANSACCION]  WITH CHECK ADD  CONSTRAINT [FK_PK_TBL_CUENTA_BANCARIA] FOREIGN KEY([FK_PK_TBL_CUENTA_BANCARIA])
REFERENCES [dbo].[TBL_CUENTA_BANCARIA] ([PK_TBL_CUENTA_BANCARIA])
GO
ALTER TABLE [dbo].[TBL_TRANSACCION] CHECK CONSTRAINT [FK_PK_TBL_CUENTA_BANCARIA]
GO
ALTER TABLE [dbo].[TBL_TRANSACCION]  WITH CHECK ADD  CONSTRAINT [FK_PK_TBL_CUENTA_BANCARIA_DESTINO] FOREIGN KEY([FK_PK_TBL_CUENTA_BANCARIA_DESTINO])
REFERENCES [dbo].[TBL_CUENTA_BANCARIA] ([PK_TBL_CUENTA_BANCARIA])
GO
ALTER TABLE [dbo].[TBL_TRANSACCION] CHECK CONSTRAINT [FK_PK_TBL_CUENTA_BANCARIA_DESTINO]
GO
ALTER TABLE [dbo].[TBL_TRANSACCION]  WITH CHECK ADD  CONSTRAINT [FK_PK_TBL_TIPO_TRANSACCION] FOREIGN KEY([FK_PK_TBL_TIPO_TRANSACCION])
REFERENCES [dbo].[TBL_TIPO_TRANSACCION] ([PK_TBL_TIPO_TRANSACCION])
GO
ALTER TABLE [dbo].[TBL_TRANSACCION] CHECK CONSTRAINT [FK_PK_TBL_TIPO_TRANSACCION]
GO
/****** Object:  StoredProcedure [dbo].[SP_CALCULAR_INTERES_DIARIO]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_CALCULAR_INTERES_DIARIO]
AS
BEGIN
	BEGIN TRY 
        BEGIN TRANSACTION;

			DECLARE @V_TEMP_TABLE_INTERES TABLE (
				FECHA DATETIME,
				TASA_DIARIA DECIMAL(18,5),
				PK_TBL_CUENTA_BANCARIA INT,
				SALDO_NUEVO DECIMAL(18,3),
				INTERES_GANADO DECIMAL(18,3)
			);

			INSERT INTO @V_TEMP_TABLE_INTERES
			SELECT 
				GETDATE() AS FECHA, 
				T.TASA_DIARIA AS TASA_DIARIA, 
				CB.PK_TBL_CUENTA_BANCARIA AS PK_TBL_CUENTA_BANCARIA, 
				(CB.SALDO * T.TASA_DIARIA) + CB.SALDO AS SALDO_NUEVO, 
				(CB.SALDO * T.TASA_DIARIA) AS INTERES_GANADO
			FROM 
				TBL_CUENTA_BANCARIA CB
					INNER JOIN TBL_TASA T ON CB.SALDO >= T.MONTO_DESDE AND (CB.Saldo <= T.MONTO_HASTA OR T.MONTO_HASTA IS NULL)

			UPDATE 
				CB
			SET 
				CB.SALDO = TI.SALDO_NUEVO
			FROM 
				TBL_CUENTA_BANCARIA CB
					INNER JOIN @V_TEMP_TABLE_INTERES TI ON CB.PK_TBL_CUENTA_BANCARIA = TI.PK_TBL_CUENTA_BANCARIA

			INSERT INTO TBL_HISTORICO_SALDOS(FECHA, FK_PK_TBL_CUENTA_BANCARIA, TASA_INTERES_DIARIO, MONTO, INTERES_GANADO)
			SELECT 
				FECHA, 
				PK_TBL_CUENTA_BANCARIA, 
				TASA_DIARIA, 
				SALDO_NUEVO,
				INTERES_GANADO
			FROM 
				@V_TEMP_TABLE_INTERES

		COMMIT TRANSACTION;
	END TRY 
	BEGIN CATCH  
		IF @@TRANCOUNT > 0
		BEGIN
			ROLLBACK TRANSACTION;
		END
	END CATCH;
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_MAN_TRANSACCION]    Script Date: 27/3/2024 12:48:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_MAN_TRANSACCION]
(
    @P_PK_TBL_CUENTA_BANCARIA INT = 0, 
    @P_PK_TBL_CUENTA_BANCARIA_DESTINO INT = NULL, 
    @P_PK_TBL_TIPO_TRANSACCION INT = 0, 
    @P_MONTO DECIMAL(18,2) = 0
)
AS
BEGIN
    BEGIN TRY 
        BEGIN TRANSACTION;

        --DEPOSITAR DINERO
        IF (@P_PK_TBL_TIPO_TRANSACCION = 1)
        BEGIN
            UPDATE TBL_CUENTA_BANCARIA
            SET SALDO = SALDO + @P_MONTO
            WHERE PK_TBL_CUENTA_BANCARIA = @P_PK_TBL_CUENTA_BANCARIA;

			INSERT INTO TBL_TRANSACCION(FK_PK_TBL_CUENTA_BANCARIA, FK_PK_TBL_TIPO_TRANSACCION, MONTO, FECHA)
			VALUES (@P_PK_TBL_CUENTA_BANCARIA, @P_PK_TBL_TIPO_TRANSACCION, @P_MONTO, GETDATE())
        END

        --RETIRAR DINERO
        IF (@P_PK_TBL_TIPO_TRANSACCION = 2)
        BEGIN
            DECLARE @V_SALDO_ACTUAL DECIMAL(18,2);
            SELECT @V_SALDO_ACTUAL = SALDO FROM TBL_CUENTA_BANCARIA WHERE PK_TBL_CUENTA_BANCARIA = @P_PK_TBL_CUENTA_BANCARIA;
            
            UPDATE TBL_CUENTA_BANCARIA
            SET SALDO = SALDO - @P_MONTO
            WHERE PK_TBL_CUENTA_BANCARIA = @P_PK_TBL_CUENTA_BANCARIA;

			INSERT INTO TBL_TRANSACCION(FK_PK_TBL_CUENTA_BANCARIA, FK_PK_TBL_TIPO_TRANSACCION, MONTO, FECHA)
			VALUES (@P_PK_TBL_CUENTA_BANCARIA, @P_PK_TBL_TIPO_TRANSACCION, @P_MONTO, GETDATE())
        END;

        --TRASPASAR DINERO ENTRE CUENTAS
        IF (@P_PK_TBL_TIPO_TRANSACCION = 3)
        BEGIN
            DECLARE @V_SALDO_ORIGEN DECIMAL(18,2);
            SELECT @V_SALDO_ORIGEN = SALDO FROM TBL_CUENTA_BANCARIA WHERE PK_TBL_CUENTA_BANCARIA = @P_PK_TBL_CUENTA_BANCARIA;

            UPDATE TBL_CUENTA_BANCARIA
            SET SALDO = SALDO - @P_MONTO
            WHERE PK_TBL_CUENTA_BANCARIA = @P_PK_TBL_CUENTA_BANCARIA;

            UPDATE TBL_CUENTA_BANCARIA
            SET SALDO = SALDO + @P_MONTO
            WHERE PK_TBL_CUENTA_BANCARIA = @P_PK_TBL_CUENTA_BANCARIA_DESTINO;

			INSERT INTO TBL_TRANSACCION(FK_PK_TBL_CUENTA_BANCARIA, FK_PK_TBL_CUENTA_BANCARIA_DESTINO, FK_PK_TBL_TIPO_TRANSACCION, MONTO, FECHA)
			VALUES (@P_PK_TBL_CUENTA_BANCARIA, @P_PK_TBL_CUENTA_BANCARIA_DESTINO, @P_PK_TBL_TIPO_TRANSACCION, @P_MONTO, GETDATE())
        END

        COMMIT TRANSACTION;
    END TRY 
    BEGIN CATCH  
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END
        ;THROW;
    END CATCH;
END;
GO
